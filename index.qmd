---
title: "Property Graph Exchange Format (PG)"
title-block-banner: true
crossref:
  lst-title: Example
---

The Property Graph Exchange Format (PG) provides the **[specification](https://pg-format.github.io/specification/)** of a **labeled property graph data model** with serialization formats [PG Format](https://pg-format.github.io/specification/#pg-format), [PG-JSON](https://pg-format.github.io/specification/#pg-json), and [PG JSONL](https://pg-format.github.io/specification/#pg-jsonl). The format comes with [applications](#applications) for converting, visualization, testing, and syntax highlighting.

## Example

```{.pg #lst-pg lst-cap="Property graph in PG format, with syntax highlighting and as diagram"}
{{< include example.pg >}}
```

```{mermaid}
%%| fig-align: center
%%| file: example.mmd
```

:::{.column-screen-inset-right}

```{.json #lst-jsonl lst-cap="Same graph in condense PG-JSONL format"}
{{< include example.jsonl >}}
```

<!--
```{.json #lst-json lst-cap="Same graph in PG-JSON format"}
{{< include example.json >}}
```
-->

:::

## Applications

- [pgformat](https://pypi.org/project/pgformat/) python package and command line application to parse and serialize Property Graph Exchange Format

- [pg-formatter](https://pg-format.github.io/pg-formatter/) web application to try out, validate and vizualize property graphs in PG format

- [syntax highlighting](https://github.com/pg-format/pg-highlight) definitions of PG format for multiple highlighting engines

- [pgraphs](https://github.com/pg-format/pgraphs) property graph converter command line application and programming library
  [![NPM Version](http://img.shields.io/npm/v/pgraphs.svg?style=flat)](https://www.npmjs.org/package/pgraphs)

- [PG Test Suite](https://github.com/pg-format/pg-test-suite) for implementations

- [Blitzboard](https://www.blitzboard.io/) dashboard web application for graph data

## Feedback and Sources

Feedback and questions are welcome. There is a [discussion board](https://github.com/orgs/pg-format/discussions)!

The [pg-format organization at GitHub](https://github.com/pg-format) contains relevant git repositories and corresponding issue trackers.

## Publications

- **[Property Graph Exchange Format Specification](https://pg-format.github.io/specification/)**
- Chiba, H., Yamanaka, R., Matsumoto, S.: [Property Graph Exchange Format](https://arxiv.org/abs/1907.03936). 2019
- Chiba, H., Yamanaka, R., Matsumoto, S.: [G2GML: Graph to Graph Mapping Language for Bridging RDF and Property Graphs](https://doi.org/10.1007/978-3-030-62466-8_11). 2020
- Voß, J.: [Property-Graphen: eine kurze Einführung](https://jakobib.github.io/pgraphen2024/). 2024

